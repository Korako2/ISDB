-- Creating the "DRIVER STATUS" enumeration
CREATE TYPE DRIVER_STATUS AS ENUM (
  'OFF',
  'EN_ROUTE',
  'UNLOADING',
  'LOADING',
  'WAITING_FOR_ORDER',
  'WAITING_FOR_LOADING',
  'WAITING_FOR_UNLOADING',
  'ARRIVED_AT_LOADING_LOCATION'
);

-- Creating the "DRIVER_STATUS_HISTORY" table
CREATE TABLE DRIVER_STATUS_HISTORY (
  DRIVER_ID int REFERENCES DRIVER (DRIVER_ID),
  DATE date,
  STATUS DRIVER_STATUS,
  -- DRIVER_ID and DATE - PK
  PRIMARY KEY (DRIVER_ID, DATE)
);

-- Creating the "LOADING_UNLOADING_AGREEMENT" table
CREATE TABLE LOADING_UNLOADING_AGREEMENT (
  ORDER_ID int REFERENCES ORDER (ORDER_ID),
  DRIVER_ID int NOT NULL,
  DEPARTURE_POINT int NOT NULL,
  DESTINATION_POINT int NOT NULL,
  SENDER_ID int NOT NULL,
  RECEIVER_ID int NOT NULL,
  UNLOADING_TIME time NOT NULL,
  LOADING_TIME time NOT NULL
);

-- Creating the "CARGO" table
CREATE TABLE CARGO (
  CARGO_ID serial PRIMARY KEY,
  WEIGHT float NOT NULL,
  WIDTH float NOT NULL,
  HEIGHT float NOT NULL,
  LENGTH float NOT NULL,
  ORDER_ID int NOT NULL REFERENCES ORDER (ORDER_ID),
  CARGO_TYPE CARGO_TYPE
);

-- Creating the "DRIVER" table
CREATE TABLE DRIVER (
  DRIVER_ID serial PRIMARY KEY,
  CONTACT_DETAILS VARCHAR(11) NOT NULL,
  PASSPORT VARCHAR(10) NOT NULL,
  BANK_CARD_NUMBER text NOT NULL
);

-- Creating the "TARIFF RATE" table
CREATE TABLE TARIFF_RATE (
  DRIVER_ID int REFERENCES DRIVER (DRIVER_ID),
  DAILY_RATE int NOT NULL,
  RATE_PER_KM int NOT NULL
);

-- Creating the "ORDER STATUS" enumeration
CREATE TYPE ORDER_STATUS AS ENUM (
  'ACCEPTED',
  'IN_PROGRESS',
  'ARRIVED_AT_LOADING_LOCATION',
  'LOADING',
  'ARRIVED_AT_UNLOADING_LOCATION',
  'ON_THE_WAY',
  'DELIVERED',
  'COMPLETED'
);

-- Creating the "ORDER" table
CREATE TABLE ORDER (
  ORDER_ID serial PRIMARY KEY,
  CUSTOMER_ID int NOT NULL REFERENCES CUSTOMER (CUSTOMER_ID),
  DISTANCE float NOT NULL,
  PRICE float NOT NULL,
  ORDER_DATE date NOT NULL,
  VEHICLE_ID int REFERENCES VEHICLE (VEHICLE_ID)
);

-- Creating the "ORDER_STATUSES" table
CREATE TABLE ORDER_STATUSES (
  ORDER_ID int REFERENCES ORDER (ORDER_ID),
  TIME timestamp,
  STATUS ORDER_STATUS,
  PRIMARY KEY (ORDER_ID, TIME)
);

-- Creating the "CUSTOMER" table
CREATE TABLE CUSTOMER (
  CUSTOMER_ID serial PRIMARY KEY,
  PERSON_ID int REFERENCES PERSON (PERSON_ID),
  ORGANIZATION VARCHAR(50)
);

-- Creating the "VEHICLE" table
CREATE TABLE VEHICLE (
  VEHICLE_ID serial PRIMARY KEY,
  NUMBER varchar(9) NOT NULL,
  MODEL varchar(50) NOT NULL,
  MANUFACTURE_DATE date NOT NULL,
  LENGTH float NOT NULL,
  WIDTH float NOT NULL,
  HEIGHT float NOT NULL,
  LOADING_CAPACITY float NOT NULL,
  BODY_TYPE BODY_TYPE
);

-- Creating the "BODY TYPE" enumeration
CREATE TYPE BODY_TYPE AS ENUM (
  'OPEN',
  'CLOSED'
);

